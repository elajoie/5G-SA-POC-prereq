---

- name: Install PXE
  become: true
  tags: install
  block:

    - name: Install packages
      dnf:
        name: "{{ packages_pxe }}"
        state: latest

    - name: setup firewall
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
        immediate: yes
        zone: public
      with_items: "{{ services_pxe }}"

    - name: Create a directory if it does not exist
      file:
        path: "{{ item }}"
        state: directory
      with_items: "{{ folders_pxe }}"

#Put the boot iso in the web servers root directory manually when using tower
#    - name: "Copy over iso file to tftp server - {{ ansible_facts['nodename'] }}"
#      copy:
#        src: "{{ boot_iso }}"
#        dest: "/var/www/html/{{ boot_iso }}"

    - name: Mount boot iso read-only
      mount:
        path: "{{ mount_point }}"
        src: "/var/www/html/{{ boot_iso }}"
        fstype: iso9660
        opts: ro,noauto
        state: mounted

    - name: Copy over files for UEFI
      copy:
        remote_src: yes
        src: "{{ efi_dir }}{{ item }}"
        dest: "{{ tftp_dir }}/uefi/{{ item }}"
      with_items: "{{ efifiles }}"

    - name: Copy over files for bios
      copy:
        remote_src: yes
        src: "{{ bios_dir }}{{ item }}"
        dest: "{{ tftp_dir }}/pxelinux/{{ item }}"
      with_items: "{{ biosfiles }}"

    - name: Set up BIOS cfg boot files
      template:
        src: all-default.j2
        dest: "{{ tftp_dir }}/pxelinux/pxelinux.cfg/{{ item.macaddr | hwaddr('eui48') | lower }}"
        mode: 0555
      with_items:
        - "{{ nodes.masters }}"
        - "{{ nodes.workers }}"
        - "{{ nodes.bootstrap }}"

    - name: Copy over files for booting RHEL
      copy:
        remote_src: yes
        src: "{{ boot_dir }}{{ item }}"
        dest: "{{ tftp_dir }}/images/{{ rhel_version}}/{{ item }}"
      with_items: "{{ bootfiles }}"

    - name: Copy over files for stage2
      copy:
        remote_src: yes
        src: "{{ mount_point }}/images"
        dest: "/var/www/html/{{ rhel_version }}/"

    - name: Template a file for kickstart onto tftp server
      template:
        src: ks.cfg.j2
        dest: /var/www/html/kickstarts/ks.cfg

    - name: Template a file for grub menu onto tftp server
      template:
        src: grub.cfg.j2
        dest: "{{ tftp_dir }}/uefi/grub.cfg"

    - name: Template a file for custom kickstart onto tftp server
      template:
        src: ks.cfg-mac.j2
        dest: "/var/www/html/kickstarts/ks.cfg-01-{{ item.macaddr | hwaddr('eui48') | lower }}"
        mode: 0555
      with_items:
        - "{{ nodes.masters }}"
        - "{{ nodes.workers }}"
        - "{{ nodes.bootstrap }}"

    - name: Template a file for custom grub menu onto tftp server
      template:
        src: grub.cfg-mac.j2
        dest: "{{ tftp_dir }}/uefi/grub.cfg-01-{{ item.macaddr | hwaddr('eui48') | lower }}"
        mode: 0555
        
      with_items:
        - "{{ nodes.masters }}"
        - "{{ nodes.workers }}"
        - "{{ nodes.bootstrap }}"

    - name: Start and ebable TFTP and xinetd service
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items: "{{ systemd_services_pxe }}"

    - name: Unmount boot iso
      mount:
        path: "{{ mount_point }}"
        state: absent

- name: Remove PXE
  become: true
  tags: remove
  block:

    - name: Get Firewalld ZONE
      shell: "IFACE=$(nmcli con show '{{ srv_interface }}' | grep connection.interface-name | awk '{print $2}') ; ZONE=$(firewall-cmd --list-all-zones | grep -B 3 $IFACE | head -n 1 | awk '{print $1}') ; echo $ZONE"
      register: firewalldzone


    - name: Configure Firewalld
      ignore_errors: yes
      firewalld:
        zone: "{{ firewalldzone.stdout }}"
        state: disabled
        permanent: yes
        port: "{{ item }}"
      with_items:
        - 67/udp
        - 4011/udp
        - 69/udp

    - name: Reload Firewalld
      ignore_errors: yes
      shell: |
        firewall-cmd --reload

    - name: Remove pxe files
      ignore_errors: yes
      shell:  "rm -rf /var/lib/tftpboot/pxelinux.cfg/*"

    - name: Remove packages
      yum:
        name:
          - syslinux
          - tftp-server
        state: removed
